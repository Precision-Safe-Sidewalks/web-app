version: "3"

networks:
  default:
    name: pss-dev
    external: true

volumes:
  psql:
    driver: local
  ipython_data_local: {}

services:
  app:
    image: pss:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.app
    command: python3 manage.py runserver 0.0.0.0:8000
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=pss_dev
      - GEOCODING_ENABLED=true
      - LAMBDA_API_KEY=fake-api-key
    env_file:
      - docker/env
      - docker/env.secrets
    ports:
      - 8000:8000
    volumes:
      - .:/code
      - ipython_data_local:/root/.python/profile_default
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/status/"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - db

  db:
    image: postgis/postgis:14-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=pss_dev
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 6432:5432
    volumes:
      - .:/code
      - psql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres", "--dbname", "pss_dev"]
      interval: 10s
      timeout: 5s
      retries: 3
  
  lambda-geocoding:
    image: pss-lambda-geocoding:latest
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=pss_dev
    env_file:
      - docker/env.secrets
    ports:
      - 8001:8080

  lambda-pricing-sheet:
    image: pss-lambda-pricing-sheet:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - API_BASE_URL=http://app:8000 
      - API_KEY=fake-api-key
    env_file:
      - docker/env.secrets
    ports:
      - 8002:8080
    volumes:
      - .aws-lambda-rie:/aws-lambda
    entrypoint: /aws-lambda/aws-lambda-rie
    command: ./main

  lambda-project-summary:
    image: pss-lambda-project-summary:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - API_BASE_URL=http://app:8000 
      - API_KEY=fake-api-key
    env_file:
      - docker/env.secrets
    ports:
      - 8003:8080
    volumes:
      - .aws-lambda-rie:/aws-lambda
    entrypoint: /aws-lambda/aws-lambda-rie
    command: ./main

  lambda-arcgis-sync:
    image: pss-lambda-arcgis-sync:latest
    environment:
      - API_BASE_URL=http://app:8000 
      - API_KEY=fake-api-key
    env_file:
      - docker/env.secrets
    ports:
      - 8004:8080
