name: build-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1

jobs:
  check_standards:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install Python dependencies
        run: |
          pip install -r requirements.dev.txt

      - name: Check code standards
        run: |
          make ci_check_standards

  build:
    runs-on: ubuntu-latest
    needs: [check_standards]
    outputs:
      GIT_HASH: ${{ steps.set-git-hash.outputs.git_hash }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::292181225895:role/github-actions
          role-session-name: github-actions
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          touch docker/env.secrets # dummy environment file
          make image

      - name: Release Docker image
        run: |
          make release_image
          
      - name: Set git hash
        id: set-git-hash
        run: |
          echo "git_hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  #test:
  #  runs-on: ubuntu-latest
  #  needs: [build]
  #  services:
  #    postgres:
  #      image: postgis/postgis:14-3.4
  #      env:
  #        POSTGRES_USER=postgres
  #        POSTGRES_PASSWORD=postgres
  #        POSTGRES_NAME=pss_dev
  #      options: >-
  #        --health_cmd pg_isready
  #        --health-interval 10s
  #        --health-timeout 5s
  #        --health-retries 5
